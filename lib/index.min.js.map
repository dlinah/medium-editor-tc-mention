{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.min.js","webpack:///webpack/bootstrap 6ebe90c1152ad66b8103","webpack:///./src/index.js","webpack:///external \"MediumEditor\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","last","text","length","unwrapForTextNode","el","doc","parentNode","_mediumEditor2","util","unwrap","currentNode","lastChild","prevNode","previousSibling","nodeType","textContent","removeChild","Object","defineProperty","value","TCMention","LEFT_ARROW_KEYCODE","undefined","_mediumEditor","Extension","extend","name","extraClassName","extraActiveClassName","extraPanelClassName","extraActivePanelClassName","extraTriggerClassNameMap","extraActiveTriggerClassNameMap","tagName","renderPanelContent","destroyPanelContent","activeTriggerList","triggerClassNameMap","#","@","activeTriggerClassNameMap","hideOnBlurDelay","init","initMentionPanel","attachEventHandlers","destroy","mentionPanel","document","createElement","classList","add","getEditorOption","appendChild","subscribe","handleBlur","bind","handleFocus","handleKeyup","_this","hideOnBlurDelayId","setTimeout","hidePanel","clearTimeout","event","keyCode","getKeyCode","isSpace","SPACE","getWordFromSelection","target","indexOf","trigger","word","showPanel","isArrowTowardsLeft","remove","activeMentionAt","activeTriggerClassName","extraActiveTriggerClassName","_activeMentionAt","nextSibling","firstChild","siblingNode","textNode","createTextNode","insertBefore","lastEmptyWord","hasLastEmptyWord","trim","substr","selection","select","Math","min","base","saveSelection","restoreSelection","initialDiff","getWordPosition","position","diff","prevText","_MediumEditor$selecti","getSelectionRange","startContainer","startOffset","endContainer","wordStart","wordEnd","slice","triggerClassName","extraTriggerClassName","contains","activatePanel","wrapWordInMentionAt","positionPanel","updatePanelContent","getSelection","rangeCount","range","getRangeAt","cloneRange","nextWordEnd","setStart","setEnd","element","surroundContents","removeAllRanges","addRange","_activeMentionAt$getB","getBoundingClientRect","bottom","left","width","_window","window","pageXOffset","pageYOffset","style","top","handleSelectMention","seletedText"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"MediumEditor\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"MediumEditor\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"MediumEditor\")) : factory(root[\"MediumEditor\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"MediumEditor\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"MediumEditor\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"MediumEditor\")) : factory(root[\"MediumEditor\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TCMention = exports.LEFT_ARROW_KEYCODE = undefined;\n\texports.unwrapForTextNode = unwrapForTextNode;\n\t\n\tvar _mediumEditor = __webpack_require__(1);\n\t\n\tvar _mediumEditor2 = _interopRequireDefault(_mediumEditor);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction last(text) {\n\t  return text[text.length - 1];\n\t}\n\t\n\tvar LEFT_ARROW_KEYCODE = exports.LEFT_ARROW_KEYCODE = 37;\n\t\n\tfunction unwrapForTextNode(el, doc) {\n\t  var parentNode = el.parentNode;\n\t  _mediumEditor2.default.util.unwrap(el, doc);\n\t  // Merge textNode\n\t  var currentNode = parentNode.lastChild;\n\t  var prevNode = currentNode.previousSibling;\n\t  while (prevNode) {\n\t    if (currentNode.nodeType === 3 && prevNode.nodeType === 3) {\n\t      prevNode.textContent += currentNode.textContent;\n\t      parentNode.removeChild(currentNode);\n\t    }\n\t    currentNode = prevNode;\n\t    prevNode = currentNode.previousSibling;\n\t  }\n\t}\n\t\n\tvar TCMention = exports.TCMention = _mediumEditor2.default.Extension.extend({\n\t  name: \"mention\",\n\t\n\t  /* @deprecated: use extraPanelClassName. Will remove in next major (3.0.0) release\n\t   * extraClassName: [string]\n\t   *\n\t   * Extra className to be added with the `medium-editor-mention-panel` element.\n\t   */\n\t  extraClassName: \"\",\n\t\n\t  /* @deprecated: use extraActivePanelClassName. Will remove in next major (3.0.0) release\n\t   * extraActiveClassName: [string]\n\t   *\n\t   * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n\t   */\n\t  extraActiveClassName: \"\",\n\t\n\t  /* extraPanelClassName: [string]\n\t   *\n\t   * Extra className to be added with the `medium-editor-mention-panel` element.\n\t   */\n\t  extraPanelClassName: \"\",\n\t\n\t  /* extraActivePanelClassName: [string]\n\t   *\n\t   * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n\t   */\n\t  extraActivePanelClassName: \"\",\n\t\n\t  extraTriggerClassNameMap: {},\n\t\n\t  extraActiveTriggerClassNameMap: {},\n\t\n\t  /* tagName: [string]\n\t   *\n\t   * Element tag name that would indicate that this mention. It will have\n\t   * `medium-editor-mention-at` className applied on it.\n\t   */\n\t  tagName: \"strong\",\n\t\n\t  /* renderPanelContent: [\n\t   *    function (panelEl: dom, currentMentionText: string, selectMentionCallback: function)\n\t   * ]\n\t   *\n\t   * Render function that used to create the content of the panel when panel is show.\n\t   *\n\t   * @params panelEl: DOM element of the panel.\n\t   *\n\t   * @params currentMentionText: Often used as query criteria. e.g. @medium\n\t   *\n\t   * @params selectMentionCallback:\n\t   *    callback used in customized panel content.\n\t   *\n\t   *    When called with null, it tells the Mention plugin to close the panel.\n\t   *        e.g. selectMentionCallback(null);\n\t   *\n\t   *    When called with text, it tells the Mention plugin that the text is selected by the user.\n\t   *        e.g. selectMentionCallback(\"@mediumrocks\")\n\t   */\n\t  renderPanelContent: function renderPanelContent() {},\n\t\n\t  /* destroyPanelContent: [function (panelEl: dom)]\n\t   *\n\t   * Destroy function to remove any contents rendered by renderPanelContent\n\t   *  before panelEl being removed from the document.\n\t   *\n\t   * @params panelEl: DOM element of the panel.\n\t   */\n\t  destroyPanelContent: function destroyPanelContent() {},\n\t\n\t  activeTriggerList: [\"@\"],\n\t\n\t  triggerClassNameMap: {\n\t    \"#\": \"medium-editor-mention-hash\",\n\t    \"@\": \"medium-editor-mention-at\"\n\t  },\n\t\n\t  activeTriggerClassNameMap: {\n\t    \"#\": \"medium-editor-mention-hash-active\",\n\t    \"@\": \"medium-editor-mention-at-active\"\n\t  },\n\t\n\t  hideOnBlurDelay: 300,\n\t\n\t  init: function init() {\n\t    this.initMentionPanel();\n\t    this.attachEventHandlers();\n\t  },\n\t  destroy: function destroy() {\n\t    if (this.mentionPanel) {\n\t      if (this.mentionPanel.parentNode) {\n\t        this.destroyPanelContent(this.mentionPanel);\n\t        this.mentionPanel.parentNode.removeChild(this.mentionPanel);\n\t      }\n\t      delete this.mentionPanel;\n\t    }\n\t  },\n\t  initMentionPanel: function initMentionPanel() {\n\t    var el = this.document.createElement(\"div\");\n\t\n\t    el.classList.add(\"medium-editor-mention-panel\");\n\t    if (this.extraPanelClassName || this.extraClassName) {\n\t      el.classList.add(this.extraPanelClassName || this.extraClassName);\n\t    }\n\t\n\t    this.getEditorOption(\"elementsContainer\").appendChild(el);\n\t\n\t    this.mentionPanel = el;\n\t  },\n\t  attachEventHandlers: function attachEventHandlers() {\n\t    if (this.hideOnBlurDelay !== null && this.hideOnBlurDelay !== undefined) {\n\t      // for hideOnBlurDelay, the panel should hide after blur event\n\t      this.subscribe(\"blur\", this.handleBlur.bind(this));\n\t      // and clear out hide timeout if focus again\n\t      this.subscribe(\"focus\", this.handleFocus.bind(this));\n\t    }\n\t    // if the editor changes its content, we have to show or hide the panel\n\t    this.subscribe(\"editableKeyup\", this.handleKeyup.bind(this));\n\t  },\n\t  handleBlur: function handleBlur() {\n\t    var _this = this;\n\t\n\t    if (this.hideOnBlurDelay !== null && this.hideOnBlurDelay !== undefined) {\n\t      this.hideOnBlurDelayId = setTimeout(function () {\n\t        _this.hidePanel(false);\n\t      }, this.hideOnBlurDelay);\n\t    }\n\t  },\n\t  handleFocus: function handleFocus() {\n\t    if (this.hideOnBlurDelayId) {\n\t      clearTimeout(this.hideOnBlurDelayId);\n\t      this.hideOnBlurDelayId = null;\n\t    }\n\t  },\n\t  handleKeyup: function handleKeyup(event) {\n\t    var keyCode = _mediumEditor2.default.util.getKeyCode(event);\n\t    var isSpace = keyCode === _mediumEditor2.default.util.keyCode.SPACE;\n\t    this.getWordFromSelection(event.target, isSpace ? -1 : 0);\n\t\n\t    if (!isSpace && this.activeTriggerList.indexOf(this.trigger) !== -1 && this.word.length > 1) {\n\t      this.showPanel();\n\t    } else {\n\t      this.hidePanel(keyCode === LEFT_ARROW_KEYCODE);\n\t    }\n\t  },\n\t  hidePanel: function hidePanel(isArrowTowardsLeft) {\n\t    this.mentionPanel.classList.remove(\"medium-editor-mention-panel-active\");\n\t    var extraActivePanelClassName = this.extraActivePanelClassName || this.extraActiveClassName;\n\t\n\t    if (extraActivePanelClassName) {\n\t      this.mentionPanel.classList.remove(extraActivePanelClassName);\n\t    }\n\t    if (this.activeMentionAt) {\n\t      this.activeMentionAt.classList.remove(this.activeTriggerClassName);\n\t      if (this.extraActiveTriggerClassName) {\n\t        this.activeMentionAt.classList.remove(this.extraActiveTriggerClassName);\n\t      }\n\t    }\n\t    if (this.activeMentionAt) {\n\t      // http://stackoverflow.com/a/27004526/1458162\n\t      var _activeMentionAt = this.activeMentionAt;\n\t      var parentNode = _activeMentionAt.parentNode;\n\t      var previousSibling = _activeMentionAt.previousSibling;\n\t      var nextSibling = _activeMentionAt.nextSibling;\n\t      var firstChild = _activeMentionAt.firstChild;\n\t\n\t      var siblingNode = isArrowTowardsLeft ? previousSibling : nextSibling;\n\t      var textNode = undefined;\n\t      if (!siblingNode) {\n\t        textNode = this.document.createTextNode(\"\");\n\t        parentNode.appendChild(textNode);\n\t      } else if (siblingNode.nodeType !== 3) {\n\t        textNode = this.document.createTextNode(\"\");\n\t        parentNode.insertBefore(textNode, siblingNode);\n\t      } else {\n\t        textNode = siblingNode;\n\t      }\n\t      var lastEmptyWord = last(firstChild.textContent);\n\t      var hasLastEmptyWord = lastEmptyWord.trim().length === 0;\n\t      if (hasLastEmptyWord) {\n\t        var textContent = firstChild.textContent;\n\t\n\t        firstChild.textContent = textContent.substr(0, textContent.length - 1);\n\t        textNode.textContent = \"\" + lastEmptyWord + textNode.textContent;\n\t      } else {\n\t        if (textNode.textContent.length === 0 && firstChild.textContent.length > 1) {\n\t          textNode.textContent = \" \";\n\t        }\n\t      }\n\t      if (isArrowTowardsLeft) {\n\t        _mediumEditor2.default.selection.select(this.document, textNode, textNode.length);\n\t      } else {\n\t        _mediumEditor2.default.selection.select(this.document, textNode, Math.min(textNode.length, 1));\n\t      }\n\t      if (firstChild.textContent.length <= 1) {\n\t        // LIKE core#execAction\n\t        this.base.saveSelection();\n\t        unwrapForTextNode(this.activeMentionAt, this.document);\n\t        this.base.restoreSelection();\n\t      }\n\t      //\n\t      this.activeMentionAt = null;\n\t    }\n\t  },\n\t  getWordFromSelection: function getWordFromSelection(target, initialDiff) {\n\t    var _MediumEditor$selecti = _mediumEditor2.default.selection.getSelectionRange(this.document);\n\t\n\t    var startContainer = _MediumEditor$selecti.startContainer;\n\t    var startOffset = _MediumEditor$selecti.startOffset;\n\t    var endContainer = _MediumEditor$selecti.endContainer;\n\t\n\t    if (startContainer !== endContainer) {\n\t      return;\n\t    }\n\t    var textContent = startContainer.textContent;\n\t\n\t    function getWordPosition(position, diff) {\n\t      var prevText = textContent[position - 1];\n\t      if (prevText === null || prevText === undefined) {\n\t        return position;\n\t      } else if (prevText.trim().length === 0 || position <= 0 || textContent.length < position) {\n\t        return position;\n\t      } else {\n\t        return getWordPosition(position + diff, diff);\n\t      }\n\t    }\n\t\n\t    this.wordStart = getWordPosition(startOffset + initialDiff, -1);\n\t    this.wordEnd = getWordPosition(startOffset + initialDiff, 1) - 1;\n\t    this.word = textContent.slice(this.wordStart, this.wordEnd);\n\t    this.trigger = this.word.slice(0, 1);\n\t    this.triggerClassName = this.triggerClassNameMap[this.trigger];\n\t    this.activeTriggerClassName = this.activeTriggerClassNameMap[this.trigger];\n\t    //\n\t    this.extraTriggerClassName = this.extraTriggerClassNameMap[this.trigger];\n\t    this.extraActiveTriggerClassName = this.extraActiveTriggerClassNameMap[this.trigger];\n\t  },\n\t  showPanel: function showPanel() {\n\t    if (!this.mentionPanel.classList.contains(\"medium-editor-mention-panel-active\")) {\n\t      this.activatePanel();\n\t      this.wrapWordInMentionAt();\n\t    }\n\t    this.positionPanel();\n\t    this.updatePanelContent();\n\t  },\n\t  activatePanel: function activatePanel() {\n\t    this.mentionPanel.classList.add(\"medium-editor-mention-panel-active\");\n\t    if (this.extraActivePanelClassName || this.extraActiveClassName) {\n\t      this.mentionPanel.classList.add(this.extraActivePanelClassName || this.extraActiveClassName);\n\t    }\n\t  },\n\t  wrapWordInMentionAt: function wrapWordInMentionAt() {\n\t    var selection = this.document.getSelection();\n\t    if (!selection.rangeCount) {\n\t      return;\n\t    }\n\t    // http://stackoverflow.com/a/6328906/1458162\n\t    var range = selection.getRangeAt(0).cloneRange();\n\t    if (range.startContainer.parentNode.classList.contains(this.triggerClassName)) {\n\t      this.activeMentionAt = range.startContainer.parentNode;\n\t    } else {\n\t      var nextWordEnd = Math.min(this.wordEnd, range.startContainer.textContent.length);\n\t      range.setStart(range.startContainer, this.wordStart);\n\t      range.setEnd(range.startContainer, nextWordEnd);\n\t      // Instead, insert our own version of it.\n\t      // TODO: Not sure why, but using <span> tag doens't work here\n\t      var element = this.document.createElement(this.tagName);\n\t      element.classList.add(this.triggerClassName);\n\t      if (this.extraTriggerClassName) {\n\t        element.classList.add(this.extraTriggerClassName);\n\t      }\n\t      this.activeMentionAt = element;\n\t      //\n\t      range.surroundContents(element);\n\t      selection.removeAllRanges();\n\t      selection.addRange(range);\n\t      //\n\t      _mediumEditor2.default.selection.select(this.document, this.activeMentionAt.firstChild, this.word.length);\n\t    }\n\t    this.activeMentionAt.classList.add(this.activeTriggerClassName);\n\t    if (this.extraActiveTriggerClassName) {\n\t      this.activeMentionAt.classList.add(this.extraActiveTriggerClassName);\n\t    }\n\t  },\n\t  positionPanel: function positionPanel() {\n\t    var _activeMentionAt$getB = this.activeMentionAt.getBoundingClientRect();\n\t\n\t    var bottom = _activeMentionAt$getB.bottom;\n\t    var left = _activeMentionAt$getB.left;\n\t    var width = _activeMentionAt$getB.width;\n\t    var _window = this.window;\n\t    var pageXOffset = _window.pageXOffset;\n\t    var pageYOffset = _window.pageYOffset;\n\t\n\t    this.mentionPanel.style.top = pageYOffset + bottom + \"px\";\n\t    this.mentionPanel.style.left = pageXOffset + left + width + \"px\";\n\t  },\n\t  updatePanelContent: function updatePanelContent() {\n\t    this.renderPanelContent(this.mentionPanel, this.word, this.handleSelectMention.bind(this));\n\t  },\n\t  handleSelectMention: function handleSelectMention(seletedText) {\n\t    if (seletedText) {\n\t      var textNode = this.activeMentionAt.firstChild;\n\t      textNode.textContent = seletedText;\n\t      _mediumEditor2.default.selection.select(this.document, textNode, seletedText.length);\n\t      //\n\t      this.hidePanel(false);\n\t    } else {\n\t      this.hidePanel(false);\n\t    }\n\t  }\n\t});\n\t\n\texports.default = TCMention;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6ebe90c1152ad66b8103\n **/","import {\n  default as MediumEditor,\n} from \"medium-editor\";\n\nfunction last(text) {\n  return text[text.length - 1];\n}\n\nexport const LEFT_ARROW_KEYCODE = 37;\n\nexport function unwrapForTextNode(el, doc) {\n  const parentNode = el.parentNode;\n  MediumEditor.util.unwrap(el, doc);\n    // Merge textNode\n  let currentNode = parentNode.lastChild;\n  let prevNode = currentNode.previousSibling;\n  while (prevNode) {\n    if (currentNode.nodeType === 3 && prevNode.nodeType === 3) {\n      prevNode.textContent += currentNode.textContent;\n      parentNode.removeChild(currentNode);\n    }\n    currentNode = prevNode;\n    prevNode = currentNode.previousSibling;\n  }\n}\n\nexport const TCMention = MediumEditor.Extension.extend({\n  name: `mention`,\n\n  /* @deprecated: use extraPanelClassName. Will remove in next major (3.0.0) release\n   * extraClassName: [string]\n   *\n   * Extra className to be added with the `medium-editor-mention-panel` element.\n   */\n  extraClassName: ``,\n\n  /* @deprecated: use extraActivePanelClassName. Will remove in next major (3.0.0) release\n   * extraActiveClassName: [string]\n   *\n   * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n   */\n  extraActiveClassName: ``,\n\n  /* extraPanelClassName: [string]\n   *\n   * Extra className to be added with the `medium-editor-mention-panel` element.\n   */\n  extraPanelClassName: ``,\n\n  /* extraActivePanelClassName: [string]\n   *\n   * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n   */\n  extraActivePanelClassName: ``,\n\n  extraTriggerClassNameMap: {},\n\n  extraActiveTriggerClassNameMap: {},\n\n  /* tagName: [string]\n   *\n   * Element tag name that would indicate that this mention. It will have\n   * `medium-editor-mention-at` className applied on it.\n   */\n  tagName: `strong`,\n\n  /* renderPanelContent: [\n   *    function (panelEl: dom, currentMentionText: string, selectMentionCallback: function)\n   * ]\n   *\n   * Render function that used to create the content of the panel when panel is show.\n   *\n   * @params panelEl: DOM element of the panel.\n   *\n   * @params currentMentionText: Often used as query criteria. e.g. @medium\n   *\n   * @params selectMentionCallback:\n   *    callback used in customized panel content.\n   *\n   *    When called with null, it tells the Mention plugin to close the panel.\n   *        e.g. selectMentionCallback(null);\n   *\n   *    When called with text, it tells the Mention plugin that the text is selected by the user.\n   *        e.g. selectMentionCallback(\"@mediumrocks\")\n   */\n  renderPanelContent() {},\n\n  /* destroyPanelContent: [function (panelEl: dom)]\n   *\n   * Destroy function to remove any contents rendered by renderPanelContent\n   *  before panelEl being removed from the document.\n   *\n   * @params panelEl: DOM element of the panel.\n   */\n  destroyPanelContent() {},\n\n  activeTriggerList: [`@`],\n\n  triggerClassNameMap: {\n    \"#\": `medium-editor-mention-hash`,\n    \"@\": `medium-editor-mention-at`,\n  },\n\n  activeTriggerClassNameMap: {\n    \"#\": `medium-editor-mention-hash-active`,\n    \"@\": `medium-editor-mention-at-active`,\n  },\n\n  hideOnBlurDelay: 300,\n\n  init() {\n    this.initMentionPanel();\n    this.attachEventHandlers();\n  },\n\n  destroy() {\n    if (this.mentionPanel) {\n      if (this.mentionPanel.parentNode) {\n        this.destroyPanelContent(this.mentionPanel);\n        this.mentionPanel.parentNode.removeChild(this.mentionPanel);\n      }\n      delete this.mentionPanel;\n    }\n  },\n\n  initMentionPanel() {\n    const el = this.document.createElement(`div`);\n\n    el.classList.add(`medium-editor-mention-panel`);\n    if (this.extraPanelClassName || this.extraClassName) {\n      el.classList.add(this.extraPanelClassName || this.extraClassName);\n    }\n\n    this.getEditorOption(`elementsContainer`).appendChild(el);\n\n    this.mentionPanel = el;\n  },\n\n  attachEventHandlers() {\n    if (this.hideOnBlurDelay !== null && this.hideOnBlurDelay !== undefined) {\n      // for hideOnBlurDelay, the panel should hide after blur event\n      this.subscribe(`blur`, ::this.handleBlur);\n      // and clear out hide timeout if focus again\n      this.subscribe(`focus`, ::this.handleFocus);\n    }\n    // if the editor changes its content, we have to show or hide the panel\n    this.subscribe(`editableKeyup`, ::this.handleKeyup);\n  },\n\n  handleBlur() {\n    if (this.hideOnBlurDelay !== null && this.hideOnBlurDelay !== undefined) {\n      this.hideOnBlurDelayId = setTimeout(() => {\n        this.hidePanel(false);\n      }, this.hideOnBlurDelay);\n    }\n  },\n\n  handleFocus() {\n    if (this.hideOnBlurDelayId) {\n      clearTimeout(this.hideOnBlurDelayId);\n      this.hideOnBlurDelayId = null;\n    }\n  },\n\n  handleKeyup(event) {\n    const keyCode = MediumEditor.util.getKeyCode(event);\n    const isSpace = keyCode === MediumEditor.util.keyCode.SPACE;\n    this.getWordFromSelection(event.target, isSpace ? -1 : 0);\n\n    if (!isSpace && this.activeTriggerList.indexOf(this.trigger) !== -1 && this.word.length > 1) {\n      this.showPanel();\n    } else {\n      this.hidePanel(keyCode === LEFT_ARROW_KEYCODE);\n    }\n  },\n\n  hidePanel(isArrowTowardsLeft) {\n    this.mentionPanel.classList.remove(`medium-editor-mention-panel-active`);\n    const extraActivePanelClassName = this.extraActivePanelClassName || this.extraActiveClassName;\n\n    if (extraActivePanelClassName) {\n      this.mentionPanel.classList.remove(extraActivePanelClassName);\n    }\n    if (this.activeMentionAt) {\n      this.activeMentionAt.classList.remove(this.activeTriggerClassName);\n      if (this.extraActiveTriggerClassName) {\n        this.activeMentionAt.classList.remove(this.extraActiveTriggerClassName);\n      }\n    }\n    if (this.activeMentionAt) {\n      // http://stackoverflow.com/a/27004526/1458162\n      const { parentNode, previousSibling, nextSibling, firstChild } = this.activeMentionAt;\n      const siblingNode = isArrowTowardsLeft ? previousSibling : nextSibling;\n      let textNode;\n      if (!siblingNode) {\n        textNode = this.document.createTextNode(``);\n        parentNode.appendChild(textNode);\n      } else if (siblingNode.nodeType !== 3) {\n        textNode = this.document.createTextNode(``);\n        parentNode.insertBefore(textNode, siblingNode);\n      } else {\n        textNode = siblingNode;\n      }\n      const lastEmptyWord = last(firstChild.textContent);\n      const hasLastEmptyWord = lastEmptyWord.trim().length === 0;\n      if (hasLastEmptyWord) {\n        const { textContent } = firstChild;\n        firstChild.textContent = textContent.substr(0, textContent.length - 1);\n        textNode.textContent = `${ lastEmptyWord }${ textNode.textContent }`;\n      } else {\n        if (textNode.textContent.length === 0 && firstChild.textContent.length > 1) {\n          textNode.textContent = `\\u00A0`;\n        }\n      }\n      if (isArrowTowardsLeft) {\n        MediumEditor.selection.select(this.document, textNode, textNode.length);\n      } else {\n        MediumEditor.selection.select(this.document, textNode, Math.min(textNode.length, 1));\n      }\n      if (firstChild.textContent.length <= 1) {\n        // LIKE core#execAction\n        this.base.saveSelection();\n        unwrapForTextNode(this.activeMentionAt, this.document);\n        this.base.restoreSelection();\n      }\n      //\n      this.activeMentionAt = null;\n    }\n  },\n\n  getWordFromSelection(target, initialDiff) {\n    const {\n      startContainer,\n      startOffset,\n      endContainer,\n    } = MediumEditor.selection.getSelectionRange(this.document);\n    if (startContainer !== endContainer) {\n      return;\n    }\n    const { textContent } = startContainer;\n\n    function getWordPosition(position, diff) {\n      const prevText = textContent[position - 1];\n      if (prevText === null || prevText === undefined) {\n        return position;\n      } else if (prevText.trim().length === 0 || position <= 0 || textContent.length < position) {\n        return position;\n      } else {\n        return getWordPosition(position + diff, diff);\n      }\n    }\n\n    this.wordStart = getWordPosition(startOffset + initialDiff, -1);\n    this.wordEnd = getWordPosition(startOffset + initialDiff, 1) - 1;\n    this.word = textContent.slice(this.wordStart, this.wordEnd);\n    this.trigger = this.word.slice(0, 1);\n    this.triggerClassName = this.triggerClassNameMap[this.trigger];\n    this.activeTriggerClassName = this.activeTriggerClassNameMap[this.trigger];\n      //\n    this.extraTriggerClassName = this.extraTriggerClassNameMap[this.trigger];\n    this.extraActiveTriggerClassName = this.extraActiveTriggerClassNameMap[this.trigger];\n  },\n\n  showPanel() {\n    if (!this.mentionPanel.classList.contains(`medium-editor-mention-panel-active`)) {\n      this.activatePanel();\n      this.wrapWordInMentionAt();\n    }\n    this.positionPanel();\n    this.updatePanelContent();\n  },\n\n  activatePanel() {\n    this.mentionPanel.classList.add(`medium-editor-mention-panel-active`);\n    if (this.extraActivePanelClassName || this.extraActiveClassName) {\n      this.mentionPanel.classList.add(this.extraActivePanelClassName || this.extraActiveClassName);\n    }\n  },\n\n  wrapWordInMentionAt() {\n    const selection = this.document.getSelection();\n    if (!selection.rangeCount) {\n      return;\n    }\n    // http://stackoverflow.com/a/6328906/1458162\n    const range = selection.getRangeAt(0).cloneRange();\n    if (range.startContainer.parentNode.classList.contains(this.triggerClassName)) {\n      this.activeMentionAt = range.startContainer.parentNode;\n    } else {\n      const nextWordEnd = Math.min(this.wordEnd, range.startContainer.textContent.length);\n      range.setStart(range.startContainer, this.wordStart);\n      range.setEnd(range.startContainer, nextWordEnd);\n      // Instead, insert our own version of it.\n      // TODO: Not sure why, but using <span> tag doens't work here\n      const element = this.document.createElement(this.tagName);\n      element.classList.add(this.triggerClassName);\n      if (this.extraTriggerClassName) {\n        element.classList.add(this.extraTriggerClassName);\n      }\n      this.activeMentionAt = element;\n      //\n      range.surroundContents(element);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      //\n      MediumEditor.selection.select(\n        this.document,\n        this.activeMentionAt.firstChild,\n        this.word.length\n      );\n    }\n    this.activeMentionAt.classList.add(this.activeTriggerClassName);\n    if (this.extraActiveTriggerClassName) {\n      this.activeMentionAt.classList.add(this.extraActiveTriggerClassName);\n    }\n  },\n\n  positionPanel() {\n    const { bottom, left, width } = this.activeMentionAt.getBoundingClientRect();\n    const { pageXOffset, pageYOffset } = this.window;\n\n    this.mentionPanel.style.top = `${ pageYOffset + bottom }px`;\n    this.mentionPanel.style.left = `${ pageXOffset + left + width }px`;\n  },\n\n  updatePanelContent() {\n    this.renderPanelContent(this.mentionPanel, this.word, ::this.handleSelectMention);\n  },\n\n  handleSelectMention(seletedText) {\n    if (seletedText) {\n      const textNode = this.activeMentionAt.firstChild;\n      textNode.textContent = seletedText;\n      MediumEditor.selection.select(this.document, textNode, seletedText.length);\n      //\n      this.hidePanel(false);\n    } else {\n      this.hidePanel(false);\n    }\n  },\n\n});\n\nexport default TCMention;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"MediumEditor\"\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}