{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.min.js","webpack:///webpack/bootstrap d25365d08a0bdf4f8335","webpack:///./src/index.js","webpack:///external \"MediumEditor\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","last","text","length","unwrapForTextNode","el","doc","prevNode","currentNode","parentNode","_mediumEditor2","util","unwrap","lastChild","previousSibling","nodeType","textContent","removeChild","Object","defineProperty","value","_mediumEditor","LEFT_ARROW_KEYCODE","TCMention","Extension","extend","name","extraClassName","extraActiveClassName","extraPanelClassName","extraActivePanelClassName","extraTriggerClassNameMap","extraActiveTriggerClassNameMap","tagName","renderPanelContent","destroyPanelContent","activeTriggerList","triggerClassNameMap","#","@","activeTriggerClassNameMap","hideOnBlurDelay","init","initMentionPanel","attachEventHandlers","destroy","mentionPanel","document","createElement","classList","add","getEditorOption","appendChild","subscribe","handleBlur","bind","handleFocus","handleKeyup","_this","hideOnBlurDelayId","setTimeout","hidePanel","clearTimeout","event","keyCode","getKeyCode","isSpace","SPACE","getWordFromSelection","target","indexOf","trigger","word","showPanel","isArrowTowardsLeft","remove","activeMentionAt","activeTriggerClassName","extraActiveTriggerClassName","_activeMentionAt","nextSibling","firstChild","siblingNode","textNode","undefined","createTextNode","insertBefore","lastEmptyWord","hasLastEmptyWord","trim","substr","selection","select","Math","min","base","saveSelection","restoreSelection","initialDiff","getWordPosition","_x","_x2","_again","position","diff","prevText","_MediumEditor$selection$getSelectionRange","getSelectionRange","startContainer","startOffset","endContainer","endOffset","wordStart","wordEnd","slice","triggerClassName","extraTriggerClassName","contains","activatePanel","wrapWordInMentionAt","positionPanel","updatePanelContent","getSelection","rangeCount","range","getRangeAt","cloneRange","setStart","setEnd","element","surroundContents","removeAllRanges","addRange","_activeMentionAt$getBoundingClientRect","getBoundingClientRect","bottom","left","width","_window","window","pageXOffset","pageYOffset","style","top","handleSelectMention","seletedText"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"MediumEditor\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"MediumEditor\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"MediumEditor\")) : factory(root[\"MediumEditor\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"MediumEditor\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"MediumEditor\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"MediumEditor\")) : factory(root[\"MediumEditor\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.unwrapForTextNode = unwrapForTextNode;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _mediumEditor = __webpack_require__(1);\n\t\n\tvar _mediumEditor2 = _interopRequireDefault(_mediumEditor);\n\t\n\tfunction last(text) {\n\t    return text[text.length - 1];\n\t}\n\t\n\tvar LEFT_ARROW_KEYCODE = 37;\n\t\n\texports.LEFT_ARROW_KEYCODE = LEFT_ARROW_KEYCODE;\n\t\n\tfunction unwrapForTextNode(el, doc) {\n\t    var parentNode = el.parentNode,\n\t        prevNode,\n\t        currentNode;\n\t    _mediumEditor2[\"default\"].util.unwrap(el, doc);\n\t    // Merge textNode\n\t    currentNode = parentNode.lastChild;\n\t    while (prevNode = currentNode.previousSibling) {\n\t        if (3 === currentNode.nodeType && 3 === prevNode.nodeType) {\n\t            prevNode.textContent += currentNode.textContent;\n\t            parentNode.removeChild(currentNode);\n\t        }\n\t        currentNode = prevNode;\n\t    }\n\t}\n\t\n\tvar TCMention = _mediumEditor2[\"default\"].Extension.extend({\n\t    name: \"mention\",\n\t\n\t    /* @deprecated: use extraPanelClassName. Will remove in next major (3.0.0) release\n\t     * extraClassName: [string]\n\t     *\n\t     * Extra className to be added with the `medium-editor-mention-panel` element.\n\t     */\n\t    extraClassName: \"\",\n\t\n\t    /* @deprecated: use extraActivePanelClassName. Will remove in next major (3.0.0) release\n\t     * extraActiveClassName: [string]\n\t     *\n\t     * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n\t     */\n\t    extraActiveClassName: \"\",\n\t\n\t    /* extraPanelClassName: [string]\n\t     *\n\t     * Extra className to be added with the `medium-editor-mention-panel` element.\n\t     */\n\t    extraPanelClassName: \"\",\n\t\n\t    /* extraActivePanelClassName: [string]\n\t     *\n\t     * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n\t     */\n\t    extraActivePanelClassName: \"\",\n\t\n\t    extraTriggerClassNameMap: {},\n\t\n\t    extraActiveTriggerClassNameMap: {},\n\t\n\t    /* tagName: [string]\n\t     *\n\t     * Element tag name that would indicate that this mention. It will have\n\t     * `medium-editor-mention-at` className applied on it.\n\t     */\n\t    tagName: \"strong\",\n\t\n\t    /* renderPanelContent: [function (panelEl: dom, currentMentionText: string, selectMentionCallback: function)]\n\t     *\n\t     * Render function that used to create the content of the panel when panel is show.\n\t     *\n\t     * @params panelEl: DOM element of the panel.\n\t     *\n\t     * @params currentMentionText: Often used as query criteria. e.g. @medium\n\t     *\n\t     * @params selectMentionCallback:\n\t     *      callback used in customized panel content.\n\t     *\n\t     *      When called with null, it tells the Mention plugin to close the panel.\n\t     *          e.g. selectMentionCallback(null);\n\t     *\n\t     *      When called with text, it tells the Mention plugin that the text is selected by the user.\n\t     *          e.g. selectMentionCallback(\"@mediumrocks\")\n\t     */\n\t    renderPanelContent: function renderPanelContent() {},\n\t\n\t    /* destroyPanelContent: [function (panelEl: dom)]\n\t     *\n\t     * Destroy function to remove any contents rendered by renderPanelContent before panelEl being removed from the document.\n\t     *\n\t     * @params panelEl: DOM element of the panel.\n\t     */\n\t    destroyPanelContent: function destroyPanelContent() {},\n\t\n\t    activeTriggerList: [\"@\"],\n\t\n\t    triggerClassNameMap: {\n\t        \"#\": \"medium-editor-mention-hash\",\n\t        \"@\": \"medium-editor-mention-at\"\n\t    },\n\t\n\t    activeTriggerClassNameMap: {\n\t        \"#\": \"medium-editor-mention-hash-active\",\n\t        \"@\": \"medium-editor-mention-at-active\"\n\t    },\n\t\n\t    hideOnBlurDelay: 300,\n\t\n\t    init: function init() {\n\t        this.initMentionPanel();\n\t        this.attachEventHandlers();\n\t    },\n\t\n\t    destroy: function destroy() {\n\t        if (this.mentionPanel) {\n\t            if (this.mentionPanel.parentNode) {\n\t                this.destroyPanelContent(this.mentionPanel);\n\t                this.mentionPanel.parentNode.removeChild(this.mentionPanel);\n\t            }\n\t            delete this.mentionPanel;\n\t        }\n\t    },\n\t\n\t    initMentionPanel: function initMentionPanel() {\n\t        var el = this.document.createElement(\"div\");\n\t\n\t        el.classList.add(\"medium-editor-mention-panel\");\n\t        if (this.extraPanelClassName || this.extraClassName) {\n\t            el.classList.add(this.extraPanelClassName || this.extraClassName);\n\t        }\n\t\n\t        this.getEditorOption(\"elementsContainer\").appendChild(el);\n\t\n\t        this.mentionPanel = el;\n\t    },\n\t\n\t    attachEventHandlers: function attachEventHandlers() {\n\t        if (null != this.hideOnBlurDelay) {\n\t            // for hideOnBlurDelay, the panel should hide after blur event\n\t            this.subscribe(\"blur\", this.handleBlur.bind(this));\n\t            // and clear out hide timeout if focus again\n\t            this.subscribe(\"focus\", this.handleFocus.bind(this));\n\t        }\n\t        // if the editor changes its content, we have to show or hide the panel\n\t        this.subscribe(\"editableKeyup\", this.handleKeyup.bind(this));\n\t    },\n\t\n\t    handleBlur: function handleBlur() {\n\t        var _this = this;\n\t\n\t        if (null != this.hideOnBlurDelay) {\n\t            this.hideOnBlurDelayId = setTimeout(function () {\n\t                _this.hidePanel(false);\n\t            }, this.hideOnBlurDelay);\n\t        }\n\t    },\n\t\n\t    handleFocus: function handleFocus() {\n\t        if (this.hideOnBlurDelayId) {\n\t            clearTimeout(this.hideOnBlurDelayId);\n\t            this.hideOnBlurDelayId = null;\n\t        }\n\t    },\n\t\n\t    handleKeyup: function handleKeyup(event) {\n\t        var keyCode = _mediumEditor2[\"default\"].util.getKeyCode(event);\n\t        var isSpace = keyCode === _mediumEditor2[\"default\"].util.keyCode.SPACE;\n\t        this.getWordFromSelection(event.target, isSpace ? -1 : 0);\n\t\n\t        if (!isSpace && -1 !== this.activeTriggerList.indexOf(this.trigger) && 1 < this.word.length) {\n\t            this.showPanel();\n\t        } else {\n\t            this.hidePanel(keyCode === LEFT_ARROW_KEYCODE);\n\t        }\n\t    },\n\t\n\t    hidePanel: function hidePanel(isArrowTowardsLeft) {\n\t        this.mentionPanel.classList.remove(\"medium-editor-mention-panel-active\");\n\t        if (this.extraActivePanelClassName || this.extraActiveClassName) {\n\t            this.mentionPanel.classList.remove(this.extraActivePanelClassName || this.extraActiveClassName);\n\t        }\n\t        if (this.activeMentionAt) {\n\t            this.activeMentionAt.classList.remove(this.activeTriggerClassName);\n\t            if (this.extraActiveTriggerClassName) {\n\t                this.activeMentionAt.classList.remove(this.extraActiveTriggerClassName);\n\t            }\n\t        }\n\t        if (this.activeMentionAt) {\n\t            // http://stackoverflow.com/a/27004526/1458162\n\t            var _activeMentionAt = this.activeMentionAt;\n\t            var parentNode = _activeMentionAt.parentNode;\n\t            var previousSibling = _activeMentionAt.previousSibling;\n\t            var nextSibling = _activeMentionAt.nextSibling;\n\t            var firstChild = _activeMentionAt.firstChild;\n\t\n\t            var siblingNode = isArrowTowardsLeft ? previousSibling : nextSibling;\n\t            var textNode = undefined;\n\t            if (!siblingNode) {\n\t                textNode = this.document.createTextNode(\"\");\n\t                parentNode.appendChild(textNode);\n\t            } else if (3 !== siblingNode.nodeType) {\n\t                textNode = this.document.createTextNode(\"\");\n\t                parentNode.insertBefore(textNode, siblingNode);\n\t            } else {\n\t                textNode = siblingNode;\n\t            }\n\t            var lastEmptyWord = last(firstChild.textContent);\n\t            var hasLastEmptyWord = 0 === lastEmptyWord.trim().length;\n\t            if (hasLastEmptyWord) {\n\t                firstChild.textContent = firstChild.textContent.substr(0, firstChild.textContent.length - 1);\n\t                textNode.textContent = \"\" + lastEmptyWord + textNode.textContent;\n\t            } else {\n\t                if (0 === textNode.textContent.length && 1 < firstChild.textContent.length) {\n\t                    textNode.textContent = \" \";\n\t                }\n\t            }\n\t            if (isArrowTowardsLeft) {\n\t                _mediumEditor2[\"default\"].selection.select(this.document, textNode, textNode.length);\n\t            } else {\n\t                _mediumEditor2[\"default\"].selection.select(this.document, textNode, Math.min(textNode.length, 1));\n\t            }\n\t            if (1 >= firstChild.textContent.length) {\n\t                // LIKE core#execAction\n\t                this.base.saveSelection();\n\t                unwrapForTextNode(this.activeMentionAt, this.document);\n\t                this.base.restoreSelection();\n\t            }\n\t            //\n\t            this.activeMentionAt = null;\n\t        }\n\t    },\n\t\n\t    getWordFromSelection: function getWordFromSelection(target, initialDiff) {\n\t        var _MediumEditor$selection$getSelectionRange = _mediumEditor2[\"default\"].selection.getSelectionRange(this.document);\n\t\n\t        var startContainer = _MediumEditor$selection$getSelectionRange.startContainer;\n\t        var startOffset = _MediumEditor$selection$getSelectionRange.startOffset;\n\t        var endContainer = _MediumEditor$selection$getSelectionRange.endContainer;\n\t        var endOffset = _MediumEditor$selection$getSelectionRange.endOffset;\n\t\n\t        if (startContainer !== endContainer) {\n\t            return;\n\t        }\n\t        var textContent = startContainer.textContent;\n\t\n\t        function getWordPosition(_x, _x2) {\n\t            var _again = true;\n\t\n\t            _function: while (_again) {\n\t                var position = _x,\n\t                    diff = _x2;\n\t                _again = false;\n\t\n\t                var prevText = textContent[position - 1];\n\t                if (null == prevText || 0 === prevText.trim().length || 0 >= position || textContent.length < position) {\n\t                    return position;\n\t                } else {\n\t                    _x = position + diff;\n\t                    _x2 = diff;\n\t                    _again = true;\n\t                    prevText = undefined;\n\t                    continue _function;\n\t                }\n\t            }\n\t        }\n\t\n\t        this.wordStart = getWordPosition(startOffset + initialDiff, -1);\n\t        this.wordEnd = getWordPosition(startOffset + initialDiff, 1) - 1;\n\t        this.word = textContent.slice(this.wordStart, this.wordEnd);\n\t        this.trigger = this.word.slice(0, 1);\n\t        this.triggerClassName = this.triggerClassNameMap[this.trigger];\n\t        this.activeTriggerClassName = this.activeTriggerClassNameMap[this.trigger];\n\t        //\n\t        this.extraTriggerClassName = this.extraTriggerClassNameMap[this.trigger];\n\t        this.extraActiveTriggerClassName = this.extraActiveTriggerClassNameMap[this.trigger];\n\t    },\n\t\n\t    showPanel: function showPanel() {\n\t        if (!this.mentionPanel.classList.contains(\"medium-editor-mention-panel-active\")) {\n\t            this.activatePanel();\n\t            this.wrapWordInMentionAt();\n\t        }\n\t        this.positionPanel();\n\t        this.updatePanelContent();\n\t    },\n\t\n\t    activatePanel: function activatePanel() {\n\t        this.mentionPanel.classList.add(\"medium-editor-mention-panel-active\");\n\t        if (this.extraActivePanelClassName || this.extraActiveClassName) {\n\t            this.mentionPanel.classList.add(this.extraActivePanelClassName || this.extraActiveClassName);\n\t        }\n\t    },\n\t\n\t    wrapWordInMentionAt: function wrapWordInMentionAt() {\n\t        var selection = this.document.getSelection();\n\t        if (!selection.rangeCount) {\n\t            return;\n\t        }\n\t        // http://stackoverflow.com/a/6328906/1458162\n\t        var range = selection.getRangeAt(0).cloneRange();\n\t        if (range.startContainer.parentNode.classList.contains(this.triggerClassName)) {\n\t            this.activeMentionAt = range.startContainer.parentNode;\n\t        } else {\n\t            range.setStart(range.startContainer, this.wordStart);\n\t            range.setEnd(range.startContainer, Math.min(this.wordEnd, range.startContainer.textContent.length));\n\t            // Instead, insert our own version of it.\n\t            // TODO: Not sure why, but using <span> tag doens't work here\n\t            var element = this.document.createElement(this.tagName);\n\t            element.classList.add(this.triggerClassName);\n\t            if (this.extraTriggerClassName) {\n\t                element.classList.add(this.extraTriggerClassName);\n\t            }\n\t            this.activeMentionAt = element;\n\t            //\n\t            range.surroundContents(element);\n\t            selection.removeAllRanges();\n\t            selection.addRange(range);\n\t            //\n\t            _mediumEditor2[\"default\"].selection.select(this.document, this.activeMentionAt.firstChild, this.word.length);\n\t        }\n\t        this.activeMentionAt.classList.add(this.activeTriggerClassName);\n\t        if (this.extraActiveTriggerClassName) {\n\t            this.activeMentionAt.classList.add(this.extraActiveTriggerClassName);\n\t        }\n\t    },\n\t\n\t    positionPanel: function positionPanel() {\n\t        var _activeMentionAt$getBoundingClientRect = this.activeMentionAt.getBoundingClientRect();\n\t\n\t        var bottom = _activeMentionAt$getBoundingClientRect.bottom;\n\t        var left = _activeMentionAt$getBoundingClientRect.left;\n\t        var width = _activeMentionAt$getBoundingClientRect.width;\n\t        var _window = this.window;\n\t        var pageXOffset = _window.pageXOffset;\n\t        var pageYOffset = _window.pageYOffset;\n\t\n\t        this.mentionPanel.style.top = pageYOffset + bottom + \"px\";\n\t        this.mentionPanel.style.left = pageXOffset + left + width + \"px\";\n\t    },\n\t\n\t    updatePanelContent: function updatePanelContent() {\n\t        this.renderPanelContent(this.mentionPanel, this.word, this.handleSelectMention.bind(this));\n\t    },\n\t\n\t    handleSelectMention: function handleSelectMention(seletedText) {\n\t        if (seletedText) {\n\t            var textNode = this.activeMentionAt.firstChild;\n\t            textNode.textContent = seletedText;\n\t            _mediumEditor2[\"default\"].selection.select(this.document, textNode, seletedText.length);\n\t            //\n\t            this.hidePanel(false);\n\t        } else {\n\t            this.hidePanel(false);\n\t        }\n\t    }\n\t\n\t});\n\t\n\texports.TCMention = TCMention;\n\texports[\"default\"] = TCMention;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d25365d08a0bdf4f8335\n **/","import MediumEditor from \"medium-editor\";\n\nfunction last (text) {\n    return text[text.length - 1];\n}\n\nexport const LEFT_ARROW_KEYCODE = 37;\n\nexport function unwrapForTextNode (el, doc) {\n    var parentNode = el.parentNode,\n        prevNode,\n        currentNode;\n    MediumEditor.util.unwrap(el, doc);\n    // Merge textNode\n    currentNode = parentNode.lastChild;\n    while (prevNode = currentNode.previousSibling) {\n        if (3 === currentNode.nodeType && 3 === prevNode.nodeType) {\n            prevNode.textContent += currentNode.textContent;\n            parentNode.removeChild(currentNode);\n        }\n        currentNode = prevNode;\n    }\n}\n\nexport const TCMention = MediumEditor.Extension.extend({\n    name: `mention`,\n\n    /* @deprecated: use extraPanelClassName. Will remove in next major (3.0.0) release\n     * extraClassName: [string]\n     *\n     * Extra className to be added with the `medium-editor-mention-panel` element.\n     */\n    extraClassName: ``,\n\n    /* @deprecated: use extraActivePanelClassName. Will remove in next major (3.0.0) release\n     * extraActiveClassName: [string]\n     *\n     * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n     */\n    extraActiveClassName: ``,\n\n    /* extraPanelClassName: [string]\n     *\n     * Extra className to be added with the `medium-editor-mention-panel` element.\n     */\n    extraPanelClassName: ``,\n\n    /* extraActivePanelClassName: [string]\n     *\n     * Extra active className to be added with the `medium-editor-mention-panel-active` element.\n     */\n    extraActivePanelClassName: ``,\n\n    extraTriggerClassNameMap: {},\n\n    extraActiveTriggerClassNameMap: {},\n\n    /* tagName: [string]\n     *\n     * Element tag name that would indicate that this mention. It will have\n     * `medium-editor-mention-at` className applied on it.\n     */\n    tagName: `strong`,\n\n    /* renderPanelContent: [function (panelEl: dom, currentMentionText: string, selectMentionCallback: function)]\n     *\n     * Render function that used to create the content of the panel when panel is show.\n     *\n     * @params panelEl: DOM element of the panel.\n     *\n     * @params currentMentionText: Often used as query criteria. e.g. @medium\n     *\n     * @params selectMentionCallback:\n     *      callback used in customized panel content.\n     *\n     *      When called with null, it tells the Mention plugin to close the panel.\n     *          e.g. selectMentionCallback(null);\n     *\n     *      When called with text, it tells the Mention plugin that the text is selected by the user.\n     *          e.g. selectMentionCallback(\"@mediumrocks\")\n     */\n    renderPanelContent: () => {},\n\n    /* destroyPanelContent: [function (panelEl: dom)]\n     *\n     * Destroy function to remove any contents rendered by renderPanelContent before panelEl being removed from the document.\n     *\n     * @params panelEl: DOM element of the panel.\n     */\n    destroyPanelContent: () => {},\n\n    activeTriggerList: [`@`],\n\n    triggerClassNameMap: {\n        \"#\": `medium-editor-mention-hash`,\n        \"@\": `medium-editor-mention-at`,\n    },\n\n    activeTriggerClassNameMap: {\n        \"#\": `medium-editor-mention-hash-active`,\n        \"@\": `medium-editor-mention-at-active`,\n    },\n\n    hideOnBlurDelay: 300,\n\n    init () {\n        this.initMentionPanel();\n        this.attachEventHandlers();\n    },\n\n    destroy () {\n        if (this.mentionPanel) {\n            if (this.mentionPanel.parentNode) {\n                this.destroyPanelContent(this.mentionPanel);\n                this.mentionPanel.parentNode.removeChild(this.mentionPanel);\n            }\n            delete this.mentionPanel;\n        }\n    },\n\n    initMentionPanel () {\n        const el = this.document.createElement(`div`);\n\n        el.classList.add(`medium-editor-mention-panel`);\n        if (this.extraPanelClassName || this.extraClassName) {\n          el.classList.add(this.extraPanelClassName || this.extraClassName);\n        }\n\n        this.getEditorOption(`elementsContainer`).appendChild(el);\n\n        this.mentionPanel = el;\n    },\n\n    attachEventHandlers () {\n        if (null != this.hideOnBlurDelay) {\n            // for hideOnBlurDelay, the panel should hide after blur event\n            this.subscribe(`blur`, ::this.handleBlur);\n            // and clear out hide timeout if focus again\n            this.subscribe(`focus`, ::this.handleFocus);\n        }\n        // if the editor changes its content, we have to show or hide the panel\n        this.subscribe(`editableKeyup`, ::this.handleKeyup);\n    },\n\n    handleBlur () {\n        if (null != this.hideOnBlurDelay) {\n            this.hideOnBlurDelayId = setTimeout(() => {\n                this.hidePanel(false);\n            }, this.hideOnBlurDelay);\n        }\n    },\n\n    handleFocus () {\n        if (this.hideOnBlurDelayId) {\n            clearTimeout(this.hideOnBlurDelayId);\n            this.hideOnBlurDelayId = null;\n        }\n    },\n\n    handleKeyup (event) {\n        const keyCode = MediumEditor.util.getKeyCode(event);\n        const isSpace = keyCode === MediumEditor.util.keyCode.SPACE;\n        this.getWordFromSelection(event.target, isSpace ? -1 : 0);\n\n        if (!isSpace && -1 !== this.activeTriggerList.indexOf(this.trigger) && 1 < this.word.length) {\n            this.showPanel();\n        } else {\n            this.hidePanel(keyCode === LEFT_ARROW_KEYCODE);\n        }\n    },\n\n    hidePanel (isArrowTowardsLeft) {\n        this.mentionPanel.classList.remove(`medium-editor-mention-panel-active`);\n        if (this.extraActivePanelClassName || this.extraActiveClassName) {\n            this.mentionPanel.classList.remove(this.extraActivePanelClassName || this.extraActiveClassName);\n        }\n        if (this.activeMentionAt) {\n            this.activeMentionAt.classList.remove(this.activeTriggerClassName);\n            if (this.extraActiveTriggerClassName) {\n                this.activeMentionAt.classList.remove(this.extraActiveTriggerClassName);\n            }\n        }\n        if (this.activeMentionAt) {\n            // http://stackoverflow.com/a/27004526/1458162\n            const {parentNode, previousSibling, nextSibling, firstChild} = this.activeMentionAt;\n            const siblingNode = isArrowTowardsLeft ? previousSibling : nextSibling;\n            let textNode;\n            if (!siblingNode) {\n                textNode = this.document.createTextNode(``);\n                parentNode.appendChild(textNode);\n            } else if (3 !== siblingNode.nodeType) {\n                textNode = this.document.createTextNode(``);\n                parentNode.insertBefore(textNode, siblingNode);\n            } else {\n                textNode = siblingNode;\n            }\n            const lastEmptyWord = last(firstChild.textContent);\n            const hasLastEmptyWord = 0 === lastEmptyWord.trim().length;\n            if (hasLastEmptyWord) {\n                firstChild.textContent = firstChild.textContent.substr(0, firstChild.textContent.length-1);\n                textNode.textContent = `${ lastEmptyWord }${ textNode.textContent }`;\n            } else {\n                if (0 === textNode.textContent.length && 1 < firstChild.textContent.length) {\n                    textNode.textContent = `\\u00A0`;\n                }\n            }\n            if (isArrowTowardsLeft) {\n                MediumEditor.selection.select(this.document, textNode, textNode.length);\n            } else {\n                MediumEditor.selection.select(this.document, textNode, Math.min(textNode.length, 1));\n            }\n            if (1 >= firstChild.textContent.length) {\n                // LIKE core#execAction\n                this.base.saveSelection();\n                unwrapForTextNode(this.activeMentionAt, this.document);\n                this.base.restoreSelection();\n            }\n            //\n            this.activeMentionAt = null;\n        }\n    },\n\n    getWordFromSelection (target, initialDiff) {\n        const {startContainer, startOffset, endContainer, endOffset} = MediumEditor.selection.getSelectionRange(this.document);\n        if (startContainer !== endContainer) {\n            return;\n        }\n        const {textContent} = startContainer;\n\n        function getWordPosition (position, diff) {\n            const prevText = textContent[position - 1];\n            if (null == prevText || 0 === prevText.trim().length || 0 >= position || textContent.length < position) {\n                return position;\n            } else {\n                return getWordPosition(position + diff, diff);\n            }\n        }\n\n        this.wordStart = getWordPosition(startOffset + initialDiff, -1);\n        this.wordEnd = getWordPosition(startOffset + initialDiff, 1) - 1;\n        this.word = textContent.slice(this.wordStart, this.wordEnd);\n        this.trigger = this.word.slice(0, 1);\n        this.triggerClassName = this.triggerClassNameMap[this.trigger];\n        this.activeTriggerClassName = this.activeTriggerClassNameMap[this.trigger];\n        //\n        this.extraTriggerClassName = this.extraTriggerClassNameMap[this.trigger];\n        this.extraActiveTriggerClassName = this.extraActiveTriggerClassNameMap[this.trigger];\n    },\n\n    showPanel () {\n        if (!this.mentionPanel.classList.contains(`medium-editor-mention-panel-active`)) {\n            this.activatePanel();\n            this.wrapWordInMentionAt();\n        }\n        this.positionPanel();\n        this.updatePanelContent();\n    },\n\n    activatePanel () {\n        this.mentionPanel.classList.add(`medium-editor-mention-panel-active`);\n        if (this.extraActivePanelClassName || this.extraActiveClassName) {\n            this.mentionPanel.classList.add(this.extraActivePanelClassName || this.extraActiveClassName);\n        }\n    },\n\n    wrapWordInMentionAt () {\n        const selection = this.document.getSelection();\n        if (!selection.rangeCount) {\n            return;\n        }\n        // http://stackoverflow.com/a/6328906/1458162\n        const range = selection.getRangeAt(0).cloneRange();\n        if (range.startContainer.parentNode.classList.contains(this.triggerClassName)) {\n            this.activeMentionAt = range.startContainer.parentNode;\n        } else {\n            range.setStart(range.startContainer, this.wordStart);\n            range.setEnd(range.startContainer, Math.min(this.wordEnd, range.startContainer.textContent.length));\n            // Instead, insert our own version of it.\n            // TODO: Not sure why, but using <span> tag doens't work here\n            const element = this.document.createElement(this.tagName);\n            element.classList.add(this.triggerClassName);\n            if (this.extraTriggerClassName) {\n                element.classList.add(this.extraTriggerClassName);\n            }\n            this.activeMentionAt = element;\n            //\n            range.surroundContents(element);\n            selection.removeAllRanges();\n            selection.addRange(range);\n            //\n            MediumEditor.selection.select(this.document, this.activeMentionAt.firstChild, this.word.length);\n        }\n        this.activeMentionAt.classList.add(this.activeTriggerClassName);\n        if (this.extraActiveTriggerClassName) {\n            this.activeMentionAt.classList.add(this.extraActiveTriggerClassName);\n        }\n    },\n\n    positionPanel () {\n        const {bottom, left, width} = this.activeMentionAt.getBoundingClientRect();\n        const {pageXOffset, pageYOffset} = this.window;\n\n        this.mentionPanel.style.top = `${ pageYOffset + bottom }px`;\n        this.mentionPanel.style.left = `${ pageXOffset + left + width }px`;\n    },\n\n    updatePanelContent () {\n        this.renderPanelContent(this.mentionPanel, this.word, ::this.handleSelectMention);\n    },\n\n    handleSelectMention (seletedText) {\n        if (seletedText) {\n            const textNode = this.activeMentionAt.firstChild;\n            textNode.textContent = seletedText;\n            MediumEditor.selection.select(this.document, textNode, seletedText.length);\n            //\n            this.hidePanel(false);\n        } else {\n            this.hidePanel(false);\n        }\n    },\n\n});\n\nexport default TCMention;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"MediumEditor\"\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}